/** Sample queries for Commodity Trading business network
*/

query selectAllCustomers {
  description: "Select all customers"
  statement:
      SELECT loyaltynetwork.Customer
}

query selectAllPartners {
  description: "Select all partners"
  statement:
      SELECT loyaltynetwork.LoyaltyPartner
}

query selectAllProviders {
  description: "Select all providers"
  statement:
      SELECT loyaltynetwork.LoyaltyProvider
}

query selectCustomer {
  description: "Select customer based on his id"
  statement:
      SELECT loyaltynetwork.Customer
        WHERE (userId == _$id)
}

query selectPartner {
  description: "Select partner based on their id"
  statement:
      SELECT loyaltynetwork.LoyaltyPartner
        WHERE (userId == _$id)
}

query selectProvider{
  description: "Select provider based on their id"
  statement:
      SELECT loyaltynetwork.LoyaltyProvider
        WHERE (userId == _$id)
}

query selectPartnerByProvider{
  description: "Select partner based on their provider"
  statement:
      SELECT loyaltynetwork.LoyaltyPartner
        WHERE (provider == _$provider)
}

query returnCustomersbyProvider {
    description: "Select all customers who have a particular provider"
    statement:
        SELECT loyaltynetwork.Customer
            WHERE (providers CONTAINS _$selected_provider)
}

query returnLoyaltyProvidersByCustomer {
    description: "Select all providers who have a particular customer"
    statement:
        SELECT loyaltynetwork.LoyaltyProvider
            WHERE (customers CONTAINS _$selected_customer)
}

query returnLoyaltyProvidersByPartner {
    description: "Select all providers who have a particular partner"
    statement:
        SELECT loyaltynetwork.LoyaltyProvider
            WHERE (partners CONTAINS _$selected_partner)
}

query selectAllTransactions{
    description: "Select all transaction within the network"
    statement:
        SELECT org.hyperledger.composer.system.HistorianRecord
}

query selectTransaction{
    description: "Select one particular transaction"
    statement:
        SELECT org.hyperledger.composer.system.HistorianRecord
          WHERE (transactionId == _$transaction_Id)
}

query selectAllTradeTokenTransactionsByCustomer{
    description: "Select all transactions where tokens where traded by a customer"
    statement: 
      SELECT loyaltynetwork.tradeTokens
        WHERE ((sender == _$customer) OR (receiver == _$customer))
}

query selectAllTokensFromProvider{
    description: "Select all tokens from a particular customer which were issued by a particular provider"
    statement: 
      SELECT loyaltynetwork.LoyaltyToken
        WHERE ((owner == _$owner_id) AND (issuer == _$issuer_id))
}

query selectEarnTokensTransaction {
    description: "Select all transactions where tokens are earned"
    statement:
      SELECT loyaltynetwork.earnTokens
        WHERE (transactionId == _$id)
}

query selectRedeemTokensTransaction {
    description: "Select all transactions where tokens are redeemed"
    statement:
      SELECT loyaltynetwork.redeemTokens
       WHERE (transactionId == _$id)
}

query selectIssueTokensTransaction {
    description: "Select all transactions where tokens are redeemed"
    statement:
      SELECT loyaltynetwork.issueTokens
       WHERE (transactionId == _$id)
}

query selectTradeTokensTransaction {
    description: "Select all transactions where tokens are redeemed"
    statement:
      SELECT loyaltynetwork.tradeTokens
       WHERE (transactionId == _$id)
}

query selectJoinProgramTransaction {
    description: "Select all transactions where participants join a program"
    statement:
      SELECT loyaltynetwork.joinProgram
       WHERE (transactionId == _$id)
}

query selectExitProgramTransaction {
    description: "Select all transactions where participants exit a program"
    statement:
      SELECT loyaltynetwork.exitProgram
       WHERE (transactionId == _$id)
}

query selectRegisterProgramTransaction {
    description: "Select all transactions where participants register for a program"
    statement:
      SELECT loyaltynetwork.registerForAProgram
       WHERE (transactionId == _$id)
}

query selectDeclineProgramTransaction {
    description: "Select all transactions where participants decline for a program"
    statement:
      SELECT loyaltynetwork.declineForAProgram
       WHERE (transactionId == _$id)
}


// query selectCommoditiesByExchange {
//   description: "Select all commodities based on their main exchange"
//   statement:
//       SELECT org.example.mynetwork.Commodity
//           WHERE (mainExchange==_$exchange)
// }

// query selectCommoditiesByOwner {
//   description: "Select all commodities based on their owner"
//   statement:
//       SELECT org.example.mynetwork.Commodity
//           WHERE (owner == _$owner)
// }

// query selectCommoditiesWithHighQuantity {
//   description: "Select commodities based on quantity"
//   statement:
//       SELECT org.example.mynetwork.Commodity
//           WHERE (quantity > 60)
// }
