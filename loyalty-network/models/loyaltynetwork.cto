/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace loyaltynetwork

abstract participant User identified by userId {
  o String userId
  o String email
  o String role
  --> LoyaltyToken[] tokens
}

participant Customer extends User {
  o String firstName
  o String lastName
  --> LoyaltyProvider[] providers
}

participant LoyaltyProvider extends User{
  o String companyName
  --> LoyaltyPartner[] partners
  --> Customer[] customers
}

participant LoyaltyPartner extends User{
  o String companyName
  --> LoyaltyProvider provider
}

asset LoyaltyToken identified by tokenId {
  o String tokenId
  --> User owner
}

transaction issueTokens{
  --> User issuer
  o Integer issuedTokens
}

transaction earnTokens{
  --> Customer earner
  o Integer earnedTokens
  --> User issuer
}

transaction redeemTokens {
  --> Customer redeemer
  o Integer redeemdedTokens
  --> User accepter
}

transaction tradeTokens {
  --> Customer sender
  --> Customer receiver
  o Integer amountOfTokens
}

transaction joinProgram {
  --> LoyaltyProvider programOwner
  --> User joiner
}

transaction exitProgram {
  --> LoyaltyProvider programOwner
  --> User exiter
}



// @commit(false)
// @returns(Customer[])
// transaction returnCustomersbyProvider {

// }

// @commit(false)
// @returns(LoyaltyProvider[])
// transaction returnLoyaltyProvidersByCustomer {

// }

// @commit(false)
// @returns(LoyaltyProvider[])
// transaction returnLoyaltyProvidersByPartner {

// }
